1> Which registers contain arguments to functions? For example,
   which register holds 13 in main's call to printf?
A> a0 - a7, for printf, a0: str addr, a1: 12, a2: 13.

2> Where is the call to function f in the assembly code for main?
   Where is the call to g? (Hint: the compiler may inline functions.)
A> All inlined.

3> At what address is the function printf located?
A> 0x0000000000000630

4> What value is in the register ra just after the
   jalr to printf in main?
A> 0x30

5> Run the following code.
   ```
   unsigned int i = 0x00646c72;
   printf("H%x Wo%s", 57616, &i);
   ```
   What is the output?
   The output depends on that fact that the RISC-V is little-endian.
   If the RISC-V were instead big-endian what would you set i to in
   order to yield the same output? Would you need to change 57616 to
   a different value?
A> HE110 World
   57616 = 0xE110
   
   little-endian
    'r'  'l'  'd'  '\0'
   |-72-|-6c-|-64-|-00-|
   0-------------------32

   big-endian
    '\0'  'd'  'l'  'r'
   |-00-|-64-|-6c-|-72-|
   0-------------------32

   yield the same output? No.
   Need to change 57616? No.

6> In the following code, what is going to be printed after 'y='?
   (note: the answer is not a specific value.) Why does this happen?
   ```
   printf("x=%d y=%d", 3);
   ```
A> 1? printf uses old a2 written by the previous function?
